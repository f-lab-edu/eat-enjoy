<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.restaurant.eatenjoy.dao.MenuGroupDao">
    <resultMap type="SimpleMenuGroupInfo" id="simpleMenuGroupInfo">
        <id property="menuGroupId" column="menu_group_id"/>
        <result property="menuGroupName" column="menu_group_name"/>
        <result property="restaurantId" column="restaurant_id"/>
        <collection property="menus" ofType="com.restaurant.eatenjoy.dto.SimpleMenuGroupInfo$MenuInfo">
            <id property="menuId" column="menu_id"/>
            <result property="menuName" column="menu_name"/>
            <result property="intrDc" column="intr_dc"/>
            <association property="file" javaType="FileDto">
                <id property="id" column="file_id"/>
                <result property="origFilename" column="origFilename"/>
                <result property="serverFilename" column="serverFilename"/>
                <result property="filePath" column="filePath"/>
                <result property="size" column="size"/>
            </association>
        </collection>
    </resultMap>

    <select id="findAllByRestaurantId" parameterType="long" resultType="MenuGroupDto">
        SELECT id
             , name
             , sort
             , restaurant_id AS restaurantId
          FROM menu_group
         WHERE restaurant_id = #{restaurantId}
         ORDER BY sort
    </select>

    <select id="findAllAndMenusByRestaurantId" parameterType="long" resultMap="simpleMenuGroupInfo">
        SELECT A.id AS menu_group_id
             , A.name AS menu_group_name
             , A.restaurant_id
             , B.id AS menu_id
             , B.name AS menu_name
             , B.intr_dc
             , C.id AS file_id
             , C.origFilename
             , C.serverFilename
             , C.filePath
             , C.size
          FROM menu_group A
          LEFT OUTER JOIN menu B
            ON A.id = B.menu_group_id
          LEFT OUTER JOIN files C
            ON B.file_id = C.id
         WHERE A.restaurant_id = #{restaurantId}
         ORDER BY A.sort, B.sort
    </select>

    <select id="existsMenusById" parameterType="long" resultType="boolean">
        SELECT EXISTS(SELECT 1
                        FROM menu
                       WHERE menu_group_id = #{id})
    </select>

    <insert id="register" parameterType="MenuGroupDto">
        INSERT INTO menu_group(name, sort, restaurant_id)
        VALUES(#{name}, #{sort}, #{restaurantId})
    </insert>

    <update id="updateById" parameterType="UpdateMenuGroupDto">
        UPDATE menu_group
           SET name = #{name}
             , sort = #{sort}
             , update_at = now()
         WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="long">
        DELETE
          FROM menu_group
         WHERE id = #{id}
    </delete>

    <delete id="deleteByIdIn" parameterType="list">
        DELETE
          FROM menu_group
         WHERE id IN <foreach collection="menuGroupIds" item="item" open="(" separator="," close=")">#{item}</foreach>
     </delete>
</mapper>
