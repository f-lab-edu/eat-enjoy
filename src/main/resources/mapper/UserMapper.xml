<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.restaurant.eatenjoy.dao.UserDao">
    <select id="existsByLoginId" parameterType="string" resultType="boolean">
        SELECT EXISTS(SELECT 1
                        FROM users
                       WHERE login_id = #{loginId})
    </select>

    <select id="existsByEmail" parameterType="string" resultType="boolean">
        SELECT EXISTS(SELECT 1
                        FROM users
                       WHERE email = #{email})
    </select>

    <insert id="register" parameterType="UserDto">
        INSERT INTO users(login_id, password, email)
        VALUES(#{loginId}, #{password}, #{email})
    </insert>

    <select id="findIdByLoginIdAndPassword" resultType="long">
        SELECT id
          FROM users
         WHERE login_id = #{loginId}
           AND password = #{password}
    </select>

    <select id="existsByIdAndPassword" resultType="boolean">
        SELECT EXISTS(SELECT 1
                        FROM users
                       WHERE id = #{id}
                         AND password = #{password})
    </select>

    <update id="updateEmailCertified" parameterType="string">
        UPDATE users
           SET certified = 1
             , update_at = now()
         WHERE email = #{email}
    </update>

    <select id="findById" parameterType="long" resultType="UserDto">
        SELECT id
             , login_id AS loginId
             , email
             , certified
          FROM users
         WHERE id = #{id}
    </select>

    <delete id="deleteById" parameterType="long">
        DELETE
          FROM users
         WHERE id = #{id}
    </delete>

    <update id="updatePassword">
        UPDATE users
           SET password = #{password}
             , update_at = now()
         WHERE id = #{id}
    </update>

    <update id="updateById" parameterType="UserDto">
        UPDATE users
           SET certified = CASE WHEN email = #{email} THEN certified ELSE 0 END
             , email = #{email}
             , update_at = now()
         WHERE id = #{id}
    </update>
</mapper>